ÛÛÛÛ                                                Exodus Timer Interrupt Information
ÛÛÛÛİ
ŞÛÛÛÛÜ
 ßßÛÛÛÛÛÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
   İ
   İ    Information about how Exodus handles timer interrupts
   İ
 ÜÜÛÛÛÛÛßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
ŞÛÛÛÛß
ÛÛÛÛİ
ÛÛÛÛ    INTERNAL EXODUS SECTION
ÛÛÛÛ  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÛÛÛÛ  ³ Timer Interrupt ³
ÛÛÛÛ  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ÛÛÛÛ    The timer interrupt is initially setup to allow processing the timer only.  As tasks are loaded they may have timer
ÛÛÛÛ    requirements that will require the timer frequency be modified.  Exodus initially sets up the timer to ~182HZ.
ÛÛÛÛ
ÛÛÛÛ    All system timer interrupt services are pulled from TIMER 0.  This leaves TIMER 2 available.
ÛÛÛÛ
ÛÛÛÛ    ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÛÛÛÛ    ³Known bugs with timer 0³
ÛÛÛÛ    ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ÛÛÛÛ    * Bug:  AMI BIOS, starting in 1994, mistakenly initialized TIMER 0 to mode 2.  It still works but it signals an interrupt
ÛÛÛÛ            at one-half the expected rate.  For this reason the 18.2Hz clock becomes a 9.1Hz clock.
ÛÛÛÛ    * Fix:  Initialize timer 0 to mode 3 during initialize_timer()
ÛÛÛÛ
ÛÛÛÛ
ÛÛÛÛ   ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÛÛÛÛ   ³Task Timer Service Array³
ÛÛÛÛ   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ÛÛÛÛ        The TTSA is built as needed.  It was designed to handle requests by multiple programs running concurrently that
ÛÛÛÛ        desire periodic interrupts from the timer.  It consists a series of records in this structure:
ÛÛÛÛ
ÛÛÛÛ                  Offset  Length    Description
ÛÛÛÛ                  ------  ------    -----------------------------
ÛÛÛÛ                    0       2       GDT entry to tasks's LDT        * See note below
ÛÛÛÛ                    2       2       LDT entry there for call gate   * Note:  The call gate here is generated by Exodus when
ÛÛÛÛ                                                                             a program requests periodic interrupt by the
ÛÛÛÛ                                                                             timer.  It is maintained in the task's LDT.
ÛÛÛÛ                    4       8       qword, Increment per tick
ÛÛÛÛ                    12      8       qword, Current Tick count
ÛÛÛÛ                    20      4       float32, Original # of interrupts per second requested
ÛÛÛÛ                    24      8       -- Not used, reserved for future use
ÛÛÛÛ                  Total:  32 bytes
ÛÛÛÛ
ÛÛÛÛ                    * Note:  If the GDT value is 0ffffh, then it's the system timer event
ÛÛÛÛ                             If the GDT value is 0ffffh and the LDT value is 0fffeh, then this slot is empty.
ÛÛÛÛ
ÛÛÛÛ        The TTSA is terminated by 0ffffffffh.  When the TTSA is initially built during bootup.com there is only one timer
ÛÛÛÛ        request, that's the one to keep the internal clock accurate.  The second TTSA entry's GDT and LDT entries are each
ÛÛÛÛ        0ffffh indicating it is the last entry.
ÛÛÛÛ
ÛÛÛÛ   ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÛÛÛÛ   ³Task Internal Memory Variables³
ÛÛÛÛ   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ÛÛÛÛ        timer_max_hz    - dword, holds the maximum value requested in the # of intervals per second (9600 below)
ÛÛÛÛ        timer_max_value - qword, holds the maximum value to reach before the timer routine is called (960000000 below)
ÛÛÛÛ
ÛÛÛÛ     end 
ÛÛÛÛ    RCH - 07/14/00, 06:15 pm
ÛÛÛÛ