€€€€                                                        Exodus Build History
€€€€›
ﬁ€€€€‹
 ﬂﬂ€€€€€‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
   ›
   ›    Completed builds and their significance
   ›
 ‹‹€€€€€ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
ﬁ€€€€ﬂ
€€€€›
€€€€  ⁄ƒƒƒƒƒƒƒƒƒƒƒƒø
€€€€  ≥ BOOTUP.COM ≥ Exodus Boot Program
€€€€  ¿ƒƒƒƒƒƒƒƒƒƒƒƒŸ
€€€€    Build 0000.00.00 ƒƒƒ¬ Initial build, minimal software support, pmode
€€€€                        √ Basic VGA/MONO video functions (display text, next line, position cursor, display value, etc)
€€€€                        √ IDT setup, GDT setup (4,096 slots) with slots 1-9 being setup as described below
€€€€                        ¿ Defined memory regions:     Slot  Linear Addresses    Description
€€€€                                                      ----  -----------------   -----------------------
€€€€                                                        1   00000000-000007ff   Data, 2k (IDT)
€€€€                                                        2   00000800-000087ff   Data, 32k (GDT)
€€€€                                                        3   00008800-0000ffff   Data, 32k (Stack)
€€€€                                                        4   00010000-0009ffff   Code, 576k (Kernel code)
€€€€                                                        5   000a0000-000affff   Data, 64k (Graphics video segment)
€€€€                                                        6   000b0000-000b7fff   Data, 32k (Mono video segment)
€€€€                                                        7   000b8000-000bffff   Data, 32k (VGA video segment)
€€€€                                                        8   00000000-ffffffff   Data, 4GB (all of memory)
€€€€                                                        9   00010000-0009ffff   Data, 576k (Kernel data)
€€€€                          Completed:  RCH - 07/11/00, 07:38 am
€€€€
€€€€
€€€€    Build 0001.00.00 ƒƒƒ¬ Modified memory regions:    Slot  Linear Addresses    Description
€€€€                        ≥                             ----  -----------------   -----------------------
€€€€                        ≥                               1   00000000-000007ff   Data, 2k    (IDT) * See note below
€€€€                        ≥                               2   00000800-000087ff   Data, 32k   (GDT)
€€€€                        ≥                               3   00008800-0000ffff   Data, 32k   (Stack)
€€€€                        ≥                               4   00010000-0006ffff   Code, 393k  (Kernel code)
€€€€                        ≥                               5   000a0000-000affff   Data, 64k   (Graphics video segment)
€€€€                        ≥                               6   000b0000-000b7fff   Data, 32k   (Mono video segment)
€€€€                        ≥                               7   000b8000-000bffff   Data, 32k   (VGA video segment)
€€€€                        ≥                               8   00000000-ffffffff   Data, 4GB   (all of memory)
€€€€                        ≥                               9   00010000-0006ffff   Data, 393k  (Kernel data)
€€€€                        ≥                              10   00070000-0007ffff   Code, 64k   (xDebug)
€€€€                        ≥                           11-99   Reserved
€€€€                        ≥                             100   00080000-00080fff   Data, 4k    (keyboard buffer)
€€€€                        ≥                             101   00081000-00081fff   Data, 4k    (mouse buffer)
€€€€                        ≥                             102   00082000-000820ff   Data, 256b  (high memory struct)
€€€€                        ≥                             103   00082100-000824ff   Data, 1k    (ISR counts)
€€€€                        ≥                             104   00082500-0008a4ff   Data, 32k   (Task timer service array)
€€€€                        ≥                                   0008a500-0008b7ff   Reserved
€€€€                        ≥                             105   0008b800-0008b8ff   Data, 256b  (Task timer scratch memory)
€€€€                        ≥                             106   0008b900-0008c4ff   Data, 3k    (System memory, R/W, DPL=00)
€€€€                        ≥                             107   0008b900-0008c0ff   Data, 2k    (System memory, R/O, DPL=01)
€€€€                        ≥                             108   0008b900-0008c0ff   Data, 2k    (System memory, R/O, DPL=10)
€€€€                        ≥                             109   0008b900-0008c0ff   Data, 2k    (System memory, R/O, DPL=11)
€€€€                        ≥                         110-199   Reserved
€€€€                        ≥               Other slots tentatively defined as:
€€€€                        ≥                         200-210   Task management (call gates and data)
€€€€                        ≥                         211-499   Not yet assigned
€€€€                        ≥                         500-999   Kernel API Functions (call gates and data)
€€€€                        ≥                       1000-4095   LDT's for user tasks
€€€€                        ≥                                   * Note:  Slot 1 is currently not at that memory location.  It is
€€€€                        ≥                                            built at the end of the kernel code/data in Slot 9's
€€€€                        ≥                                            selector.  This allows initialization to take place with
€€€€                        ≥                                            full access to BIOS data tables.
€€€€                        √ Incorporated a keyboard ISR that stores keyboard make/break codes
€€€€                        √ Incorporated some PIC functions
€€€€                        √ Incorporated some timer functions
€€€€                        √ Incorporated a CMOS read-time function to support the realtiem clock
€€€€                        √ Incorporated a multi-plexing timer algorithm to allow different timer intervals
€€€€                        √ Incorporated a timer ISR that updates the system clock and provides a signal for multi-tasking
€€€€                        √ Incorporated an interrupt count algorithm that stores the number of times each interrupt is called
€€€€                        ¿ Completed:  RCH - 07/15/00, 08:05 am
€€€€
€€€€
€€€€    Build 0001.08.06.2000ƒ¬ Modified the format of the Build version, originally YEAR.xx.yy, now XXXX.mm.dd.year
€€€€                          √ Modified the bootup identification screen, it now shows two lines at the top in reverse video
€€€€                          ¿ Completed:  RCH - 08/06/00, 06:59 am
€€€€
€€€€    Build 0001.08.09.2000ƒ¬ Removed one memory region (now unused):  Slot  Linear Addresses   Description
€€€€                          ≥                                          ----  -----------------  --------------------------------
€€€€                          ≥                                          102   00082000-000820ff  Data, 256b  (high memory struct)
€€€€                          √ Incorporated all PIC functions
€€€€                          √ Incorporated all timer functions, and made some timer related functions publically available
€€€€                          √ Added PS/2 mouse support
€€€€                          √ Added serial port recongition (loads tables from BIOS)
€€€€                          √ Added parallel port recognition (loads tables from BIOS)
€€€€                          √ Finalized the manner in which q/Language will build stack frames in Exodus
€€€€                          ≥ * Refer to SOURCE\INF\STACKS.INF for more information
€€€€                          √ Finalized a naming convention for Exodus internal routines
€€€€                          ≥     - Such as "x<DEVICE>_internal_<FUNCTION_NAME>", as in "xPIC_internal_mask_irq"
€€€€                          √ Finalized a naming convention for Exodus public routines:
€€€€                          ≥     - Such as "x<DEVICE>_<FUNCTION_NAME>", as in "xTIMER_evaluate_interval"
€€€€                          ¿ Completed:  RCH - 08/09/00, 08:01 pm
€€€€
€€€€    Build 0001.08.13.2000ƒ¬ Modified these memory regions:  Slot  Linear Addresses   Description
€€€€                          ≥                                 ----  -----------------  --------------------------------
€€€€                          ≥                                  4    00010000-0003ffff  Code, 192k (Exodus kernel)
€€€€                          ≥                                  9    00010000-0003ffff  Data, 192k (Exodus kernel)
€€€€                          ≥
€€€€                          √ Added these memory regions:      99   0008d900-0009ffff  Data, 73.5k (memory sub-structure)
€€€€                          ≥                                ⁄ 110  0008c500-0008c8ff  Data, 1k (disk drive structure)
€€€€                          ≥                                ¿ 111  0008c900-0008d8ff  Data, 4k (disk partition structure)
€€€€                          ≥                                ⁄ 112  <system dependent> Data, (floppy 0 DT memory)
€€€€                          ≥                                ≥ 113  <system dependent> Data, (floppy 0 NP memory)
€€€€                          ≥                                ≥ 114  <system dependent> Data, (floppy 0 RP memory)
€€€€                          ≥                                ≥ 115  <system dependent> Data, (floppy 0 read buffer)
€€€€                          ≥                                ≥ 116  <system dependent> Data, (floppy 0 write buffer)
€€€€                          ≥                                ¿ 117  <system dependent> Data, (floppy 0 reserved)
€€€€                          ≥                                ⁄ 118  <system dependent> Data, (floppy 1 DT memory)
€€€€                          ≥                                ≥ 119  <system dependent> Data, (floppy 1 NP memory)
€€€€                          ≥                                ≥ 120  <system dependent> Data, (floppy 1 RP memory)
€€€€                          ≥                                ≥ 121  <system dependent> Data, (floppy 1 read buffer)
€€€€                          ≥                                ≥ 122  <system dependent> Data, (floppy 1 write buffer)
€€€€                          ≥                                ¿ 123  <system dependent> Data, (floppy 1 reserved)
€€€€                          √ Added initialize_disk_drives()
€€€€                          √ Added xDISK_internal_add_drive()
€€€€                          √ Added xDISK_internal_add_partition()
€€€€                          √ Added xMEMORY_internal_allocate_gdt()
€€€€                          √ Added xMEMORY_internal_free_gdt()
€€€€                          √ I have internally designed the file system to fully support hard disks and cdroms, dvds, cdrs,
€€€€                          ≥     and cdrws, even though the operating system does not currently support them
€€€€                          ¿ Completed:  RCH - 08/13/00, 01:25 pm
€€€€
€€€€    Build 0001.08.20.2000ƒ¬ Added these to the GDT:  Slot  Linear Addresses   Description
€€€€                          ≥                          ----  -----------------  --------------------------------
€€€€                          ≥                           11   00082000-0008207f   Exodus TSS, 128 bytes
€€€€                          ≥                           12   <32-bit task gate>  Exodus task gate
€€€€                          ≥                           13   00040000-00047fff   Stack segment 0
€€€€                          ≥                           14   00048000-0004ffff   Stack segment 1
€€€€                          ≥                           15   00050000-00057fff   Stack segment 2
€€€€                          ≥                         ⁄ 500  <32-bit call gate>  xTIMER_wait_next_tick()
€€€€                          ≥                         ≥ 501  <code segment>      xTIMER_wait_next_tick()
€€€€                          ≥                         ≥ 502  <32-bit call gate>  xTIMER_wait_full_tick()
€€€€                          ≥                         ≥ 503  <code segment>      xTIMER_wait_full_tick()
€€€€                          ≥                         ≥ 504  <32-bit call gate>  xTIMER_wait_x_ticks()
€€€€                          ≥                         ≥ 505  <code segment>      xTIMER_wait_x_ticks()
€€€€                          ≥                         ≥ 506  <32-bit call gate>  xTIMER_evaluate_interval()
€€€€                          ≥                         ¿ 507  <code segment>      xTIMER_evaluate_interval()
€€€€                          √ Updated the setup_pmode_variables() routine so it sets up the Exodus task GDT slots
€€€€                          √ Updated the initialization routine so it uses the Exodus task
€€€€                          √ Added code to the timer_handler() routine that identifies if any watchdog events are taking place
€€€€                          √ Added two global memory variables:  task_switch_allowed - 0-No, other-Yes
€€€€                          ≥                                     booting_up          - 255-Yes, others-No
€€€€                          √ Added xTASK_watchdog_add()
€€€€                          √ Added xTASK_watchdog_release()
€€€€                          √ Added xTASK_timeslice_release()
€€€€                          √ Added xTASK_priority_set()
€€€€                          √ Added xTASK_priority_query()
€€€€                          ¿ Completed:  RCH - 08/20/00, 04:44 pm
€€€€
€€€€
€€€€    Build ----.09.15.2000ƒ¬ Modified these GDT entries:    Slot  Linear Addresses   Description
€€€€                          ≥                                ----  -----------------  --------------------------------
€€€€                          ≥                                 16   00082080-000820ff   Task Manager TSS
€€€€                          ≥                                 ---
€€€€                          ≥                                 500  <32-bit call gate>  xTIMER_wait_next_tick()
€€€€                          ≥                                 501  <32-bit call gate>  xTIMER_wait_full_tick()
€€€€                          ≥                                 502  <32-bit call gate>  xTIMER_wait_x_ticks()
€€€€                          ≥                                 503  <32-bit call gate>  xTIMER_evaluate_interval()
€€€€                          ≥                                 504  <32-bit call gate>  iTIMER_set_interrupt_interval()
€€€€                          ≥
€€€€                          √ Modified the CALL GATE calling protocols, stack arrangement, etc
€€€€                          √ Modified the xTIMER_evaluate_interval() function to use the stack differently
€€€€                          ¿ Completed:  RCH - 08/20/00, 04:44 pm
€€€€
€€€€    Build 12.24.2000ƒƒƒƒƒƒ¬ Revised everything around the primative philosophy
€€€€                          √ Modified numeric convention to include month.day.year
€€€€                          ¿ This will be the Exodus numbering convention for all products
€€€€
€€€€
€€€€     end 
€€€€