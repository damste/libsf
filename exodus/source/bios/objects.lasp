// objects.lasp
//
// Exodus BIOS Object Handler
//
//





    function iOBJECT_initialize_object_space
    {
    // This routine is called to initialize the object space set aside by a task
    //
    // Upon entry:   eax - selector for object space
    //
    // Upon exit:    It's initialize
    //
        push    ds

        mov     ds,eax
        mov     u32 ptr dword ptr ds:[_OBJECT_HEADER_NEXT_OBJECT],_FIRST_OBJECT
        mov     u32 ptr dword ptr ds:[_OBJECT_HEADER_FIRST_BASE_OBJECT],-1
        mov     u32 ptr dword ptr ds:[_OBJECT_HEADER_FIRST_OBJECT],-1

        pop     ds
        retf
    }




    function iOBJECT_locate_task_object
    {
    // This routine is called to locate a particular object within a given task
    //
    // Upon entry:   es:[edi] - far ptr to this task's objects
    //                    ebx - base object handle to find
    //
    // Upon exit:    carry? - SET if not found, CLEAR if found
    //                  ebx - offset to task's base object
    //
        push    edx
        push    eax

        mov     edx,u32 ptr es:[_OBJECT_HEADER_FIRST_BASE_OBJECT]
        xor     eax,eax
        while (edx != -1)
        {
            if (eax == ebx)
            {
              // This is the one
                mov     ebx,edx
                clc
                jmp     quit
            }
            mov     edx,u32 ptr es:[edx+_OBJECT_NEXT_BASE_OBJECT]
            inc     eax
        }
      // It wasn't found
        stc

      quit:
        pop     eax
        pop     edx
        retf
    }




    include "create.lasp"                                              // Create base objects and objects
    include "redraw.lasp"                                              // Redraw algorithms for base objects and objects
